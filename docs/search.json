[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Chances are, it’s about sports."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "The Intro and Top Hitters, Batters and Catchers in the Pioneer Baseball League\n\n\n\n\n\n\n\nBaseball\n\n\nSABRmetrics\n\n\nAnalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 28, 2023\n\n\nMatthew Goodsell\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPioneer League Baseball - Web Scraping Umpire Data\n\n\n\n\n\n\n\nBaseball\n\n\nSABRmetrics\n\n\nAnalysis\n\n\nwebscraping\n\n\n\n\n\n\n\n\n\n\n\nJan 28, 2023\n\n\nMatthew Goodsell\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/intro/index.html#background",
    "href": "posts/intro/index.html#background",
    "title": "The Intro and Top Hitters, Batters and Catchers in the Pioneer Baseball League",
    "section": "Background",
    "text": "Background\nBefore I get going it will be useful to have some context. The Chukars used to be a Minor League affilate with Kansas City Royals until the MLB restructured their minor leagues in 2020 leaving the Chukars and Pioneer League unaffialted and consequently, independent. This eventually opened the door for me, two years later, which I will get too. The Pioneer League now is an Offical Partner League to the MLB. Once the affilation with the Royals ended for the Chukars, a 20,000 dollar piece of equipment was just left in the stadium. That piece of equipment is known as Trackman, a black box that seats mounted to the press box directly above home plate. Covid resulted in no games played in 2020…quite the year for the Chukars and the League. Through reaching out to the Chukars I was able to operate Trackman during the 2022 season and that is where my story begins with the League.\nA little more on the Chukars, they play at Melaleuca Field in Idaho Falls. If you are ever in Idaho Falls during a game, it is worth attending on a nice summer evening. Pro tip, if you come, don’t park to close to the ballpark or else…\n\nI was in my senior year at Brigham Young University - Idaho located in Rexburg just a 25 minute drive from the ballpark. I had heard about the Chukars but never attended one of their games. I actually never grew up playing baseball. One reason why I didn’t go to a game. It’s not that I don’t like to watch, I have been to a Washington Nationals game and Philadelphia Phillies game as I am from Virginia. Anyways, I had taken a couple math classes from a professor who I had developed a good relationship with. It was a fateful conversation we had one day in the hallway were I opened up to him about where I was and what I really wanted to do with my Major in Data Science. He had the crazy idea to contact the Chukars which took me a minute to remember they are the baseball team in Idaho Falls. We both followed up on it and got to talk to the assistant GM for them. Eventually that lead to me being the trackman operator for the Chukars during the 2022 season.\nMore about the data coming from Trackman. Trackman is actually in all the MLB ballparks and a main source of MLB teams data. The v3 version, I got the chance to operate, returns 167 different variables on batters, pitchers and catchers. Here is a snipbit of some of the variables:\n\n\nCode\n# show only some columns \npacman::p_load(tidyverse, DT) \n\nall_games <- read_csv('../../data/unverified_all_games.csv')\n\n\nall_games_2 <- all_games %>% .[1:2,]\n\nDT::datatable(all_games_2)\n\n\n\n\n\n\n\n\n\nCode\nall_games <- all_games %>% filter(PlateLocSide != is.na(PlateLocSide) \n                                  & PlateLocHeight != is.na(PlateLocHeight)) %>% \n  mutate(InZone = if_else(PlateLocSide >= -0.75 & PlateLocSide <= 0.75 \n                          & PlateLocHeight >= 1.65 & PlateLocHeight <= 3.65\n                          , TRUE, FALSE )) %>% \n  mutate(PitchGroup = case_when(TaggedPitchType == \"Fastball\" ~ \"Fastballs\"\n                                , TaggedPitchType == \"Sinker\" ~ \"Fastballs\"\n                                , TaggedPitchType == \"Cutter\" ~ \"Fastballs\"\n                                , TaggedPitchType == \"Slider\" ~ \"Breaking\"\n                                , TaggedPitchType == \"Curveball\" ~ \"Breaking\"\n                                , TaggedPitchType == \"ChangeUp\" ~ \"OffSpeed\" \n                                , TaggedPitchType == \"Splitter\" ~ 'OffSpeed'\n                                , TaggedPitchType == \"Knuckleball\" ~ 'OffSpeed'\n                                , TRUE ~ 'Other')) %>% \n  mutate(MissedCall = case_when(PitchCall == \"BallCalled\" & InZone == FALSE ~ FALSE\n                                , PitchCall == \"StrikeCalled\" & InZone == FALSE ~ TRUE\n                                , PitchCall == \"BallCalled\" & InZone == TRUE ~ TRUE\n                                , PitchCall == \"StrikeCalled\" & InZone == TRUE ~ FALSE))\n\ntotal_inplay <- all_games %>% \n  group_by(Pitcher) %>% \n  filter(PitchCall == \"InPlay\") %>% \n  count() %>% \n  rename(total_inplay = n)\n\n\nEach row is a play in the game with the associated categorical and numerical information. As a trackman operator you are responsbile for making sure, before the game starts, that the roster is inputted properly. Then, as the game is happening, you are responsible for tagging each play with the appropriate categorical data so it is associated with its numerical data that trackman gets. This tagging process are from columns inning to notes."
  },
  {
    "objectID": "posts/intro/index.html#pitcher-metrics",
    "href": "posts/intro/index.html#pitcher-metrics",
    "title": "The Intro and Top Hitters, Batters and Catchers in the Pioneer Baseball League",
    "section": "Pitcher Metrics",
    "text": "Pitcher Metrics\n\\[\n\\text{Ground Ball Perc} = \\frac{Ground\\; Balls} {Pitches\\; Hit\\; In\\; Play}\n\\]\n\nA higher GB % is desired since it is expected to result in outs.\n\n\n\nCode\ntotal_gb <- all_games %>% \n  group_by(Pitcher) %>% \n  filter(TaggedHitType == \"GroundBall\") %>%\n  count() %>% \n  rename(total_gb = n)\n\nall_pitcher_gb_perc <- total_gb %>% \n  left_join(total_inplay, by = c('Pitcher'='Pitcher')) %>% \n  arrange(desc(total_inplay)) %>% \n  mutate(gb_perc = round((total_gb / total_inplay) * 100, 2)) %>% \n  filter(total_inplay > 30)\n\n\n\\[\n\\text{Fly Ball Perc} = \\frac{Fly\\; Balls} {Pitches\\; Hit\\; In\\; Play}\n\\]\n\nA lower FB % is desired as well\n\n\n\nCode\ntotal_fb <- all_games %>% \n  group_by(Pitcher) %>% \n  filter(TaggedHitType == \"FlyBall\") %>% \n  count() %>% \n  rename(total_fb = n)\n\nall_pitcher_fb_perc <- total_fb %>% \n  left_join(total_inplay, by = c('Pitcher'='Pitcher')) %>% \n  arrange(desc(total_inplay)) %>% \n  mutate(fb_perc = round((total_fb / total_inplay) * 100, 2)) %>% \n  filter(total_inplay > 30)\n\n\n\\[\n\\text{1st Pitch Strike Perc} = \\frac{1st\\; Called\\; Strike}{Total\\; 1st\\; Pitches}\n\\]\n\nA Higher 1 pitch strike % is desired and shows the control a pitcher has.\n\n\n\nCode\ntotal_first_pitch <- all_games %>% \n  filter(Balls == 0 & Strikes == 0) %>% \n  group_by(Pitcher) %>% \n  count() %>% \n  rename(first_pitch_count = n)\n\ntotal_first_pitch_strike <- all_games %>% \n  filter(Balls == 0 & Strikes == 0) %>% \n  filter(PitchCall %in% c(\"StrikeCalled\", \"StrikeSwinging\")) %>% \n  group_by(Pitcher) %>% \n  count() %>% \n  rename(strike = n)\n\nall_pitcher_first_pitch <- total_first_pitch %>% \n  left_join(total_first_pitch_strike, by = c('Pitcher' = 'Pitcher')) %>% \n  arrange(desc(first_pitch_count)) %>% \n  filter(first_pitch_count > 30) %>% \n  mutate(first_pitch_strike_perc = round(strike/first_pitch_count,4)*100) %>% \n  .[,c(1,3,2,4)] # reordering columns \n\n\n\\[\n\\text{KZone Perc} = \\frac{Total\\; In\\; Play\\; OR\\; Inside\\; Strike\\; Zone}{Total\\; Pitches}\n\\]\n\nThis metric shows the overall control the pitchers has over his pitches and ability to hit the specific spot.\n\n\n\nCode\ntotal_pitch_count <- all_games %>% \n  group_by(Pitcher) %>% \n  count() %>% \n  rename(total_pitches = n)\n\n\nkzone_count <- all_games %>% \n  filter(PlateLocSide >= -0.75 & PlateLocSide <= 0.75 \n         & PlateLocHeight >= 1.65 & PlateLocHeight <= 3.65 | PitchCall == 'InPlay') %>% \n  group_by(Pitcher) %>% \n  count() %>% \n  rename(total_kzone = n)\n\n# combine and get percent\nall_pitcher_kzone <- total_pitch_count %>% \n  left_join(kzone_count, by = c('Pitcher'='Pitcher')) %>% \n  arrange(desc(total_pitches)) %>% \n  filter(total_pitches > 30) %>% \n  .[,c(1,3,2)] %>% \n  mutate(kzone_perc = round(total_kzone/total_pitches, 4)*100)\n\n\n\\[\n\\text{Chase Against Perc} = \\frac{Strike\\; Swinging}{Total\\; Out\\; of\\; Zone}\n\\]\n\nChase against % is not a direct correlation to the movement of a pitch but does the deceptiveness in a pitchers pitch.\n\n\n\nCode\ntotal_out_zone <- all_games %>%\n  filter(InZone == FALSE) %>% \n  group_by(Pitcher) %>% \n  count() %>% \n  rename(total_out_zone = n)\n\ntotal_chase <- all_games %>% \n  filter(InZone == FALSE & PitchCall == 'StrikeSwinging') %>% \n  group_by(Pitcher) %>% \n  count() %>% \n  rename(total_chase_count = n) %>% \n  filter(total_chase_count != is.na(total_chase_count)) \n\nall_pitcher_chase_against <- total_out_zone %>% \n  left_join(total_chase, by = c('Pitcher'='Pitcher')) %>% \n  arrange(desc(total_out_zone)) %>% \n  filter(total_out_zone > 30) %>% \n  .[,c(1,3,2)] %>% \n  mutate(chase_against_perc = round(total_chase_count/total_out_zone, 4)*100) %>% \n  filter(chase_against_perc != is.na(chase_against_perc))\n\n\nAlong with:\n\nexit velo against\n\n\n\nCode\npitcher_exit_speed_avg <- all_games %>% \n  filter(PitchCall == \"InPlay\") %>% \n  filter(ExitSpeed != is.na(ExitSpeed)) %>% \n  group_by(Pitcher) %>% \n  summarise(avg_exit_speed =  round(mean(ExitSpeed), 2))\n\nall_pitcher_exit_velo <- pitcher_exit_speed_avg %>% \n  left_join(total_inplay, by = c('Pitcher'='Pitcher')) %>% \n  arrange(desc(total_inplay)) %>% \n  filter(total_inplay > 30)\n\n\n\nvertical launch angle against\n\n\n\nCode\npitcher_avg_exit_angle <- all_games %>% \n  filter(PitchCall == \"InPlay\") %>% \n  filter(Angle != is.na(Angle)) %>% \n  group_by(Pitcher) %>% \n  summarize(avg_angle = round(mean(Angle), 2))\n\nall_pitcher_angle <- pitcher_avg_exit_angle %>% \n  left_join(total_inplay, by = c('Pitcher'='Pitcher')) %>% \n  arrange(desc(total_inplay)) %>% \n  filter(total_inplay > 30) \n\n\nWhich I decide to omit a formula since these are just averages."
  },
  {
    "objectID": "posts/intro/index.html#batter-metrics",
    "href": "posts/intro/index.html#batter-metrics",
    "title": "The Intro and Top Hitters, Batters and Catchers in the Pioneer Baseball League",
    "section": "Batter Metrics",
    "text": "Batter Metrics\n\nAverage Vertical Launch Angle\n\n\n\nCode\nall_batters_vert_avg <- all_games %>% \n  filter(PitchCall == \"InPlay\" & Angle != is.na(Angle)) %>% \n  group_by(Batter) %>% \n  summarize(avg_vert_angle = round(mean(Angle), 1))\n\nall_batters_inplay <- all_games %>% \n  filter(PitchCall == \"InPlay\" & Angle != is.na(Angle)) %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename('Count' = n) %>% \n  filter(Count > 30)\n\n# joining datasets\nbatter_vert_angle <- all_batters_inplay %>% \n  inner_join(all_batters_vert_avg, by = c('Batter'='Batter')) %>% \n  arrange(desc(Count))\n\n\n\nMax Exit Velo\n\n\n\nCode\nmax_velo <- all_games %>% \n  filter(ExitSpeed != is.na(ExitSpeed)) %>% \n  group_by(Batter) %>% \n  summarize(max_ev = round(max(ExitSpeed),1))\n\n\n\nPercent of Batted Balls over 95 mph\n\n\n\nCode\nbb_count <- all_games %>% \n  filter(PitchCall == \"InPlay\") %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(total_inplay = n) %>% \n  filter(total_inplay > 30)\n\n# Batters total < 95 mph\nbb_95_plus_count <- all_games %>% \n  filter(PitchCall == \"InPlay\" & ExitSpeed >= 95) %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(total_95_plus = n)\n\n# Batters percent\nall_bb_95_plus <- bb_95_plus_count %>% \n  inner_join(bb_count, by = c('Batter'='Batter')) %>% \n  mutate(bb_plus95_perc = round((total_95_plus/total_inplay) * 100, 1)) %>% \n  arrange(desc(total_inplay))\n\n\n\nPercent of Batted Balls over 105 mph\n\n\n\nCode\nbb_105_plus_count <- all_games %>% \n  filter(PitchCall == \"InPlay\" & ExitSpeed >= 105) %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(total_105_plus = n)\n\n# Batters percent\nall_bb_105_plus <- bb_105_plus_count %>% \n  inner_join(bb_count, by = c('Batter'='Batter')) %>% \n  mutate(bb_plus105_perc = round((total_105_plus/total_inplay) * 100, 1)) %>% \n  arrange(desc(total_inplay))\n\n\nThis might seem redundant and I was told by a League Executive who had conversations with other MLB teams that this one was not something they really cared about and percent of Batted Balls over 95 mph was more important.\n\nChase Average\n\nAlso know as whiff rate, is understood as the number of times a batter has strike swinging regardless of it the pitch was inside or outside of the zone.\n\n\nCode\ntotal_out_of_zone <- all_games %>% \n  filter(InZone == FALSE) %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(OutOfZone = n)\n\ntotal_out_of_zone_ss <- all_games %>% \n  filter(InZone == FALSE & PitchCall == \"StrikeSwinging\") %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(ss_OutOfZone = n)\n\n# combining datasets\nall_chase_perc <- total_out_of_zone %>% \n  left_join(total_out_of_zone_ss, by = c('Batter'='Batter')) %>% \n  .[,c(1,3,2)]\n\nall_chase_perc[is.na(all_chase_perc)] <- 0 \n\nall_chase_perc <- all_chase_perc %>% \n  mutate(chase_perc = round((ss_OutOfZone/OutOfZone) * 100, 1))\n\nall_chase_perc <- all_chase_perc %>% \n  filter(OutOfZone > 30)\n\n\n\nMiss percentage\n\n\n\nCode\n# Denominator - total pitches Swung at\npitches_swung <- all_games %>% \n  filter(PitchCall %in% c(\"StrikeSwinging\", \"FoulBall\", \"InPlay\")) %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(swung_at_count = n)\n\n# Numerator - total Missed\npitches_missed <- all_games %>% \n  filter(PitchCall == \"StrikeSwinging\") %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(missed_count = n)\n\n# Join both Datasets\nall_miss_perc <- pitches_missed %>% \n  right_join(pitches_swung, by = c('Batter'='Batter')) \n\nall_miss_perc[is.na(all_miss_perc)] <- 0\n\nall_miss_perc <- all_miss_perc %>% \n  mutate(miss_perc = round((missed_count / swung_at_count)*100, 1)) \n\nall_miss_perc <- all_miss_perc %>% \n  filter(swung_at_count > 30) \n\n\n\nInZone Miss percentage\n\n\n\nCode\n# filtering to in zone dataset\nin_zone <- all_games %>% \n  filter(InZone == TRUE) \n\n# Denominator - total pitches Swung at\niz_pitches_swung <- in_zone %>% \n  filter(PitchCall %in% c(\"StrikeSwinging\", \"FoulBall\", \"InPlay\")) %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(iz_swung_count = n)\n\n# Numerator - total swung at\niz_pitches_missed <- in_zone %>% \n  filter(PitchCall == 'StrikeSwinging') %>% \n  group_by(Batter) %>% \n  count() %>% \n  rename(iz_miss_count = n)\n\n# Join datasets together\nall_InZone_perc <- iz_pitches_missed %>% \n  right_join(iz_pitches_swung, by=c('Batter'='Batter'))\n\nall_InZone_perc[is.na(all_InZone_perc)] <- 0\n\nall_InZone_perc <- all_InZone_perc %>% \n  mutate(InZone_miss_perc = round( (iz_miss_count / iz_swung_count) *100, 1))\n\nall_InZone_perc <- all_InZone_perc %>% \n  filter(iz_swung_count > 30)"
  },
  {
    "objectID": "posts/intro/index.html#catcher-metrics",
    "href": "posts/intro/index.html#catcher-metrics",
    "title": "The Intro and Top Hitters, Batters and Catchers in the Pioneer Baseball League",
    "section": "Catcher Metrics",
    "text": "Catcher Metrics\n\nPop Time MLB Definition - “represents the time elapsed from the moment the pitch hits the catcher’s mitt to the moment the intended fielder is projected to receive his throw at the center of the base.” (https://www.mlb.com/glossary/statcast/pop-time)\n\n\n\nCode\n# Pop time \npoptime_count <- all_games %>% \n  filter(PopTime != is.na(PopTime)) %>% \n  group_by(Catcher) %>% \n  count() %>% \n  rename(Count = n)\n\npoptime_avg <- all_games %>% \n  filter(PopTime != is.na(PopTime)) %>% \n  group_by(Catcher) %>% \n  summarize(avg_poptime = round(mean(PopTime), 1))\n\n# join datasets\nall_poptime <- poptime_count %>% \n  left_join(poptime_avg, by=c('Catcher'='Catcher'))\n\n\n\nThrow Speed Trackman Definition - “Speed at release of throw from catcher”\n\n\n\nCode\nthrowspeed_count <- all_games %>% \n  filter(ThrowSpeed != is.na(ThrowSpeed)) %>% \n  group_by(Catcher) %>% \n  count() %>% \n  rename(Count = n)\n\nthrowspeed_avg <- all_games %>% \n  filter(ThrowSpeed != is.na(ThrowSpeed)) %>% \n  group_by(Catcher) %>% \n  summarize(avg_throwspeed = round(mean(ThrowSpeed), 1))\n\n\n# join datasets\nall_throwspeed <- throwspeed_count %>% \n  left_join(throwspeed_avg, by = c('Catcher'='Catcher'))\n\n\nThe scout did talk about catcher framing and its increase in popularity, but I have not had the time to think through how I want to calculate it or research how it is calculated (which will probably just be number of pitches outside zone called for strike within a certain range) and I know you can visualize it as well, I just haven’t taken the time to do so.\nAs I noted most of these metrics it is easy to see that by ordering the values for each player in descending order or ascending order you can then assign a rank to them. I combined most values and then ordered them to see who had the lowest score indicating that this player is the better overall pitcher in these metrics. the reason I said “most” is becuase some would have required more thought process to determine the best way to rank a player rather than descending and ascending. Those metrics for batters, Vertical Launch Angle and Batted Balls over 105 percent. For Vertical Launch Angle, if you are familiar with the SABRmetric of Barrel then you know launch angle has sweet spot. So to bin values and then give a rank based off of that is possible but I choose to leave off as I was going for something quick. For Batted Balls over 105 mph percent, as stated this one is not as important and many players did not have a hit that falls into this category. The results can be seen below:\n\nBest Pitchers\nA visual depicating the top Pitchers.\n\nHere are eachs rankings for all metrics\n\n\n\nBest Batters\nA visual depicating the top Batters. \nRankings for each Metrics of the top ten Batters \n\n\nBest Catcher\nA visual depicating the top Catchers. \nRankings for each Metrics of the top ten Catchers"
  },
  {
    "objectID": "posts/Umpire_Data/index.html",
    "href": "posts/Umpire_Data/index.html",
    "title": "Pioneer League Baseball - Web Scraping Umpire Data",
    "section": "",
    "text": "what I haved learned - You have to have small test on big programs like this. - It takes a lot of time - Everytime you want to change something it changes the whole program - You really need to evaluate all options\nOUTLINE -intro -Reference last article -since the last article I have spent much of the time working on the webscraping script to pull Other informaiton -show picture of the information\n-decided to use selenium and firefox as my choices of package and browers to use -What have I learned about webscraping -"
  }
]